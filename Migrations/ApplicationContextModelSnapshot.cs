// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebTestAtlant.Models;

namespace WebTestAtlant.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebTestAtlant.Models.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime?>("DeleteDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("NomenclatureCode")
                        .IsRequired();

                    b.Property<int?>("Quantity");

                    b.Property<int>("StockmanId");

                    b.HasKey("Id");

                    b.HasIndex("StockmanId");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("WebTestAtlant.Models.Stockman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FIO")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Stockmans");
                });

            modelBuilder.Entity("WebTestAtlant.Models.Detail", b =>
                {
                    b.HasOne("WebTestAtlant.Models.Stockman", "Stockman")
                        .WithMany()
                        .HasForeignKey("StockmanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
